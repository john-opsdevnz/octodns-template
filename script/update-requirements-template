#!/usr/bin/env python3

from os.path import join
from subprocess import check_call, check_output
from sys import argv
from tempfile import TemporaryDirectory


def print_packages(packages, heading):
    print(f'{heading}:')
    print('  ', end='')
    print('\n  '.join(packages))


with TemporaryDirectory() as tmpdir:
    check_call(['python3', '-m', 'venv', tmpdir])

    # base needs
    check_call([join(tmpdir, 'bin', 'pip'), 'install', 'octodns'])
    frozen = check_output([join(tmpdir, 'bin', 'pip'), 'freeze'])
    frozen = set(frozen.decode('utf-8').strip().split('\n'))

    # dev additions, these need to be kept in sync with setup.py
    pkgs = [
        # tests_require
        'pytest',
        'pytest-cov',
        'pytest-network',
        # extra dev stuff
        # we need to manually/explicitely bump major versions as they're
        # likely to result in formatting changes that should happen in their
        # own PR. This will basically happen yearly
        # https://black.readthedocs.io/en/stable/the_black_code_style/index.html#stability-policy
        'black>=24.3.0,<25.0.0',
        'build>=0.7.0',
        'changelet',
        'docutils>=0.20.1',
        'isort>=5.11.5',
        'pyflakes>=2.2.0',
        'readme_renderer[md]>=26.0',
        'twine>=3.4.2',
    ]
    check_call([join(tmpdir, 'bin', 'pip'), 'install', *pkgs])
    dev_frozen = check_output([join(tmpdir, 'bin', 'pip'), 'freeze'])
    dev_frozen = set(dev_frozen.decode('utf-8').strip().split('\n')) - frozen

# pip installs the module itself along with deps so we need to get that out of
# our list by finding the thing that was file installed during dev
frozen = sorted(frozen)
dev_frozen = sorted(dev_frozen)

# special handling for click until python 3.9 is gone due to it dropping
# support for active versions early
i = [i for i, r in enumerate(dev_frozen) if r.startswith('click==')][0]
dev_frozen = (
    dev_frozen[:i]
    + [
        "click==8.1.8; python_version<'3.10'",
        f"{dev_frozen[i]}; python_version>='3.10'",
    ]
    + dev_frozen[i + 1 :]
)

print_packages(frozen, 'frozen')
print_packages(dev_frozen, 'dev_frozen')

script = argv[0].replace('-template', '')

with open('requirements.txt', 'w') as fh:
    fh.write(
        f'# TODO: run {script} to fill this and requirements-dev.txt out\n'
    )
    fh.write(f'# DO NOT EDIT THIS FILE DIRECTLY - use {script} to update\n')
    fh.write('\n'.join(frozen))
    fh.write('\n')

with open('requirements-dev.txt', 'w') as fh:
    fh.write(f'# DO NOT EDIT THIS FILE DIRECTLY - use {script} to update\n')
    fh.write('\n'.join(dev_frozen))
    fh.write('\n')
